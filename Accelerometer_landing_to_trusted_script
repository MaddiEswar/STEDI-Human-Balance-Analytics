import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsgluedq.transforms import EvaluateDataQuality

args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Default ruleset used by all target nodes with data quality enabled
DEFAULT_DATA_QUALITY_RULESET = """
    Rules = [
        ColumnCount > 0
    ]
"""

# Script generated for node customer trusted
customertrusted_node1758781809397 = glueContext.create_dynamic_frame.from_options(format_options={"multiLine": "false"}, connection_type="s3", format="json", connection_options={"paths": ["s3://udacity-work/customer/trusted/"], "recurse": True}, transformation_ctx="customertrusted_node1758781809397")

# Script generated for node Accelerometer landing
Accelerometerlanding_node1758781704740 = glueContext.create_dynamic_frame.from_options(format_options={"multiLine": "false"}, connection_type="s3", format="json", connection_options={"paths": ["s3://udacity-work/accelerometer/landing/"], "recurse": True}, transformation_ctx="Accelerometerlanding_node1758781704740")

# Script generated for node Join
Join_node1758781879143 = Join.apply(frame1=Accelerometerlanding_node1758781704740, frame2=customertrusted_node1758781809397, keys1=["user"], keys2=["email"], transformation_ctx="Join_node1758781879143")

# Script generated for node Drop Fields
DropFields_node1758782152220 = DropFields.apply(frame=Join_node1758781879143, paths=["serialNumber", "shareWithPublicAsOfDate", "birthDay", "registrationDate", "customerName", "shareWithFriendsAsOfDate", "shareWithResearchAsOfDate", "email", "lastUpdateDate", "phone"], transformation_ctx="DropFields_node1758782152220")

# Script generated for node accelerometer trusted
EvaluateDataQuality().process_rows(frame=DropFields_node1758782152220, ruleset=DEFAULT_DATA_QUALITY_RULESET, publishing_options={"dataQualityEvaluationContext": "EvaluateDataQuality_node1758781695321", "enableDataQualityResultsPublishing": True}, additional_options={"dataQualityResultsPublishing.strategy": "BEST_EFFORT", "observations.scope": "ALL"})
accelerometertrusted_node1758782266977 = glueContext.write_dynamic_frame.from_options(frame=DropFields_node1758782152220, connection_type="s3", format="json", connection_options={"path": "s3://udacity-work/accelerometer/trusted/", "partitionKeys": []}, transformation_ctx="accelerometertrusted_node1758782266977")

job.commit()
